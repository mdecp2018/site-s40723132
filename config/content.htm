<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>
<h1>簡介</h1>
<p>2018 Fall 計算機程式與電腦輔助設計實習課程分組網站</p>
<p></p>
<p><img alt="" height="240" src="/images/main@2x.png" width="240"/></p>
<p><img alt="" height="334" src="/images/shin.png" width="350"/></p>
<h2>CMSimfly 網站</h2>
<p>各組必須自行更改 Config 中的網站標題, 且每次完成近端動態網頁編輯後, 以 generate_pages 按鈕, 將動態網頁資料轉為靜態網頁資料, 之後再新增、提交並推送到遠端倉儲.</p>
<h2>reveal 投影片</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/reveal.leo</p>
<h2>pelican 網誌</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo </p>
<p>各分組必須自行更改 @edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p>
<p>更改 @edit publishconf.py 中的 SITEURL</p>
<p></p>
<h1>操作影片</h1>
<p>每週各分組組員必須將參與分組協同過程之電腦操作流程錄成影片後, 上傳至各自的 Youtube 帳號區, 並嵌入各分組網站頁面中.</p>
<h2>Week1</h2>
<p><span>國立虎尾科技大學機械設計工程系計算機程式 - 一乙第八週第三部分, 說明如何利用 Eric6 IDE 建立所需的 calculator 計算機程式對話表單. 過程中主要學習如何啟動 Eric6, 如何建立 Eric6 專案, 如何切換 Sources tab 與 Form tab, 如何在進入 Qt Designer 後利用格點布局, 建立按鈕與 Line Edit 部件.</span></p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/g4ksXq7sQ4M" width="560"></iframe></p>
<h2>Week2</h2>
<h4>使用 ShareX 來錄製影片 截圖</h4>
<p>先執行ShareX.exe</p>
<p><img alt="" height="35" src="https://mdecp2018.github.io/site-s40723150/images/1027-1.png" width="145"/></p>
<h4>影片錄製</h4>
<p>按下<span> </span><strong>shift + prt sc </strong>開始錄製/結束錄製</p>
<h4>截圖</h4>
<p><span>按下</span><span> prt sc               </span><span>全螢幕</span><span>截圖</span></p>
<p>按下<strong><span> </span>ctrl + prt sc  </strong>指定範圍截圖</p>
<p>按下<strong><span> </span>alt + prt sc   </strong>最上層視窗截圖</p>
<h2>Week3</h2>
<h4>練習git add、 commit  將近端資料改版內容新增、 提交</h4>
<p></p>
<p>啟動 p37 <span>行可攜系統</span></p>
<p>再把跟目錄切換到 c:（在 C 槽做練習所以必須把跟目錄從 y: 切換到 c: ）</p>
<p>c:</p>
<p>在c槽新增資料夾 test：</p>
<p>mkdir test</p>
<p><span>等等就在 test 資料夾內做練習，所以就要將目錄切換到 test：</span><span></span></p>
<p><span>cd test</span><span></span></p>
<p><span>接下來要執行  git  指令，將  test  作為  Git  的倉儲：</span><span></span></p>
<p>git init</p>
<p>執行完 git  init 後，資料夾內會有 .git 資料夾，代表現在 test 資料夾已經是 Git 的倉儲<span></span></p>
<p><span>接下來要利用 SciTE 編輯器，在 test 資料夾內新建一個 myprogram.txt 文字檔。</span></p>
<p><span>在建立文字檔之前在</span><span> SciTE 的下拉式功能表 Options 中的 SciTEGlobal.properties 設定檔案, 找到第 137 行的</span></p>
<p><span>    load.on.activate=1</span></p>
<p><span>刪除最前頭的 "#" 符號, 然後存檔, 之後關閉所有開啟的 SciTE 編輯器, 如此，可以讓 SciTE 所開啟的檔案，內容有修改時，可以即時呈現在編輯區中</span></p>
<p><span>重新在 Dos 命令列中輸入：</span></p>
<p><span>    y:\SciTE\bin\Sc1.exe </span></p>
<p><span>開啟已經修改 SciTEGlobal.properties 設定檔案之後的 SciTE 編輯區， </span><span>並且在  myprogram.txt 檔案中， 只加入一行：</span></p>
<p>my program</p>
<p><span>存檔</span></p>
<p><span>這時 c:\test 目錄中除了有 .git 目錄，又多了一個 myprogram.txt 檔案</span></p>
<p>接下來要對 c:\test 倉儲進行新增與提交流程</p>
<p><span>新增全部檔案</span><span>(拍快照)/指定新增檔案：</span></p>
<p>git add . / git add myprogram.txt</p>
<p>提交：</p>
<p>git commit -m "initial add"</p>
<p>將 myprogram.txt 納入 .git 的版次管理</p>
<p>這時已經<span>記錄第一次</span>改版，接下來再編輯 myprogram.txt 檔案加入：</p>
<p>first function</p>
<p>再次存檔, 執行 git add 與 git commit：</p>
<p>git add .</p>
<p>git commit -m "add function"</p>
<p>接著重覆新增與提交，記錄第二次改版</p>
<p>在 myprogram.txt 再增加：</p>
<p>second function</p>
<p><span>執行 git add 與 git commit，新增和提交第三次改版：</span></p>
<p>git add .</p>
<p>git commit -m "add second function"</p>
<p>git log</p>
<p>看到倉儲中已經有三個提交，分別為：</p>
<p>9423d51 add second function<br/>715f01d add function<br/> initial add</p>
<p>更換版本到 "add function" 的提交版本，練習切換到先前的版本</p>
<p>git checkout 715f01d</p>
<p>此時，已經從"add second function"切換到"<span>add function"，SciTE 那就可以馬上看到 </span><span>myprogram.txt 已經回到"</span><span>add function"</span></p>
<p>然後用這個版本內容， 新增一個 dev 分支：</p>
<p>git branch dev</p>
<p>利用 git checkout 在工作目錄中導出 dev 的版本 (其實, 修改前的 dev 狀態與 "add first function" 提交時相同</p>
<p>git checkout dev</p>
<p>接下來， 對 myprogram.txt 改版，輸入：</p>
<p>test function</p>
<p>myprogram.txt 存檔後， 進行另一次新增與提交</p>
<p>git add .</p>
<p>git commit -m "add test function"</p>
<p>查看各提交點間的關係, 可以利用(單行顯示):</p>
<p>git log --graph --oneline --all</p>
<p>準備與 add second function 後的版本進行合併， 這時 git 出現 myprogram.txt 合併衝突，因為 first function 後， 已經加入 seconf function，但是 dev 分支是在 test function 加入後所儲存的版本，因此使用者必須決定 add second function 與 add test function的內容， 是只保留其中一項功能或者同時保留</p>
<p>git checkout master</p>
<p>將工作分支轉為 master 的版本, 然後將 dev 分支的內容合併進來:</p>
<p>git merge dev</p>
<p>這時的 myprogram.txt 必須要刪除衝突標註符號，並同時保留 add second function 與 add test function,，存檔</p>
<p>最後對此一合併後的版本，進行新增與提交</p>
<h2>Week4</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1IsyntZoa9A?t=12s" width="560"></iframe></p>
<h2>Week5</h2>
<div>
<div class="syntaxhighlighter py" id="highlighter_764116">
<table border="0" cellpadding="0" cellspacing="0" style="width: 531px;">
<tbody>
<tr>
<td class="code" style="width: 529px;">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 導入 Ex1 原始碼</code></div>
<div class="line number2 index1 alt1"><code class="py plain">a </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">def</code> <code class="py plain">my_print(n, input_str):</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"以下將重覆列印 '"</code><code class="py plain">, input_str </code><code class="py keyword">+</code> <code class="py string">"' "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(n) </code><code class="py keyword">+</code> <code class="py string">"次"</code><code class="py plain">)</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(n):</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">        </code><code class="py functions">print</code><code class="py plain">(i, input_str)</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py plain">my_print(</code><code class="py value">5</code><code class="py plain">, </code><code class="py string">"Hello World!"</code><code class="py plain">)</code></div>
<div class="line number9 index8 alt2"><code class="py plain">the_str </code><code class="py keyword">=</code> <code class="py string">"開始學習 Python"</code></div>
<div class="line number10 index9 alt1"><code class="py plain">num </code><code class="py keyword">=</code> <code class="py functions">input</code><code class="py plain">(</code><code class="py string">"請輸入要列印的次數!"</code><code class="py plain">)</code></div>
<div class="line number11 index10 alt2"><code class="py plain">my_print(</code><code class="py functions">int</code><code class="py plain">(num), the_str)</code></div>
<div class="line number12 index11 alt1"><code class="py plain">a </code><code class="py keyword">=</code> <code class="py plain">a </code><code class="py keyword">+</code> <code class="py value">1</code></div>
<div class="line number13 index12 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"("</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(a) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">, </code><code class="py string">"_"</code> <code class="py keyword">*</code> <code class="py value">25</code><code class="py plain">)</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="py keyword">def</code> <code class="py plain">myfun():</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py keyword">yield</code> <code class="py value">1</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py keyword">yield</code> <code class="py value">2</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py keyword">yield</code> <code class="py value">3</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py plain">myfun():</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(i)</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="py plain">x </code><code class="py keyword">=</code> <code class="py functions">iter</code><code class="py plain">(myfun())</code></div>
<div class="line number24 index23 alt1"><code class="py plain">y </code><code class="py keyword">=</code> <code class="py functions">list</code><code class="py plain">(myfun())</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="py plain">a </code><code class="py keyword">=</code> <code class="py plain">a </code><code class="py keyword">+</code> <code class="py value">1</code></div>
<div class="line number27 index26 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"("</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(a) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">, </code><code class="py string">"_"</code> <code class="py keyword">*</code> <code class="py value">25</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py functions">print</code><code class="py plain">(x.__next__())</code></div>
<div class="line number29 index28 alt2"><code class="py functions">print</code><code class="py plain">(x.__next__())</code></div>
<div class="line number30 index29 alt1"><code class="py functions">print</code><code class="py plain">(x.__next__())</code></div>
<div class="line number31 index30 alt2"><code class="py functions">print</code><code class="py plain">(y)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<h2>Week6</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/WFw8ILuym1Q" width="560"></iframe></p>
<h2>Week7</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bzKH0iK2yBU?t=20s" width="560"></iframe></p>
<h2>week8</h2>
<p>gitlab</p>
<p></p>
</div>
</div>
<p></p>
<h4>在遠端執行</h4>
<p>在遠端執行會跳出視窗，給使用者輸入次數</p>
<p><img alt="" height="125" src="https://mdecp2018.github.io/images/1031-3.png" width="317"/></p>
<h4>在近端執行</h4>
<p>用 SciTE 來執行 python 的程式碼</p>
<p>在 Tool -&gt; Go (F5) 開始執行程式碼</p>
<p>右側的執行框中就會跳出：</p>
<p><img alt="" height="156" src="https://mdecp2018.github.io/images/1031-1.png" width="293"/></p>
<p>不會跳出視窗</p>
<p>要在 SciTE 的右側執行框輸入次數</p>
<p>我打 5 次</p>
<p><img alt="" height="357" src="https://mdecp2018.github.io/images/1031-2.png" width="234"/></p>
<p></p>
<h1>Python 手冊</h1>
<p>計算機程式教材:  <a href="http://mde.tw/cp2018/content/">http://mde.tw/cp2018/content/</a> </p>
<p>可攜程式下載: <a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing">p37.7z</a></p>
<h1>OnShape 手冊</h1>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a> </p>
<p>電腦輔助設計實習課程教材: <a href="http://mde.tw/cadp2018/content/">http://mde.tw/cadp2018/content/</a> </p>
<h1>Fusion 360</h1>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a> </p>
<p></p>
<p>=======</p>
<h1>簡介</h1>
<p>2018 Fall 計算機程式與電腦輔助設計實習課程分組網站</p>
<p></p>
<p><img alt="" height="240" src="/images/main@2x.png" width="240"/></p>
<p><img alt="" height="334" src="/images/shin.png" width="350"/></p>
<h2>CMSimfly 網站</h2>
<p>各組必須自行更改 Config 中的網站標題, 且每次完成近端動態網頁編輯後, 以 generate_pages 按鈕, 將動態網頁資料轉為靜態網頁資料, 之後再新增、提交並推送到遠端倉儲.</p>
<h2>reveal 投影片</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/reveal.leo</p>
<h2>pelican 網誌</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo </p>
<p>各分組必須自行更改 @edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p>
<p>更改 @edit publishconf.py 中的 SITEURL</p>
<p></p>
<h1>操作影片</h1>
<p>每週各分組組員必須將參與分組協同過程之電腦操作流程錄成影片後, 上傳至各自的 Youtube 帳號區, 並嵌入各分組網站頁面中.</p>
<p>week 1</p>
<p></p>
<h2>Week1</h2>
<p><span>國立虎尾科技大學機械設計工程系計算機程式 - 一乙第八週第三部分, 說明如何利用 Eric6 IDE 建立所需的 calculator 計算機程式對話表單. 過程中主要學習如何啟動 Eric6, 如何建立 Eric6 專案, 如何切換 Sources tab 與 Form tab, 如何在進入 Qt Designer 後利用格點布局, 建立按鈕與 Line Edit 部件.</span></p>
<p><iframe allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/g4ksXq7sQ4M" width="560"></iframe></p>
<h2>Week2</h2>
<h4>使用 ShareX 來錄影片 截取圖片</h4>
<p>先開啟ShareX.exe</p>
<p><img alt="" height="35" src="https://mdecp2018.github.io/site-s40723150/images/1027-1.png" width="145"/></p>
<h4>開始影片錄製</h4>
<p>按下<span> </span><strong>shift + prt sc </strong>開始錄製/結束錄製</p>
<h4>使用截圖</h4>
<p><span>按下</span><span> prt sc               </span><span>全螢幕</span><span>截圖</span></p>
<p>按下<strong><span> </span>ctrl + prt sc  </strong>指定範圍截圖</p>
<p>按下<strong><span> </span>alt + prt sc   </strong>最上層視窗截圖</p>
<p></p>
<h2>Week3</h2>
<h4>練習git add、 commit  將近端資料改版內容新增、 提交</h4>
<p></p>
<p>啟動 p37 <span>行可攜系統</span></p>
<p>再把跟目錄切換到 c:（在 C 槽做練習所以必須把跟目錄從 y: 切換到 c: ）</p>
<p>c:</p>
<p>在c槽新增資料夾 test：</p>
<p>mkdir test</p>
<p><span>等等就在 test 資料夾內做練習，所以就要將目錄切換到 test：</span><span></span></p>
<p><span>cd test</span><span></span></p>
<p><span>接下來要執行  git  指令，將  test  作為  Git  的倉儲：</span><span></span></p>
<p>git init</p>
<p>執行完 git  init 後，資料夾內會有 .git 資料夾，代表現在 test 資料夾已經是 Git 的倉儲<span></span></p>
<p><span>接下來要利用 SciTE 編輯器，在 test 資料夾內新建一個 myprogram.txt 文字檔。</span></p>
<p><span>在建立文字檔之前在</span><span> SciTE 的下拉式功能表 Options 中的 SciTEGlobal.properties 設定檔案, 找到第 137 行的</span></p>
<p><span>    load.on.activate=1</span></p>
<p><span>刪除最前頭的 "#" 符號, 然後存檔, 之後關閉所有開啟的 SciTE 編輯器, 如此，可以讓 SciTE 所開啟的檔案，內容有修改時，可以即時呈現在編輯區中</span></p>
<p><span>重新在 Dos 命令列中輸入：</span></p>
<p><span>    y:\SciTE\bin\Sc1.exe </span></p>
<p><span>開啟已經修改 SciTEGlobal.properties 設定檔案之後的 SciTE 編輯區， </span><span>並且在  myprogram.txt 檔案中， 只加入一行：</span></p>
<p>my program</p>
<p><span>存檔</span></p>
<p><span>這時 c:\test 目錄中除了有 .git 目錄，又多了一個 myprogram.txt 檔案</span></p>
<p>接下來要對 c:\test 倉儲進行新增與提交流程</p>
<p><span>新增全部檔案</span><span>(拍快照)/指定新增檔案：</span></p>
<p>git add . / git add myprogram.txt</p>
<p>提交：</p>
<p>git commit -m "initial add"</p>
<p>將 myprogram.txt 納入 .git 的版次管理</p>
<p>這時已經<span>記錄第一次</span>改版，接下來再編輯 myprogram.txt 檔案加入：</p>
<p>first function</p>
<p>再次存檔, 執行 git add 與 git commit：</p>
<p>git add .</p>
<p>git commit -m "add function"</p>
<p>接著重覆新增與提交，記錄第二次改版</p>
<p>在 myprogram.txt 再增加：</p>
<p>second function</p>
<p><span>執行 git add 與 git commit，新增和提交第三次改版：</span></p>
<p>git add .</p>
<p>git commit -m "add second function"</p>
<p>git log</p>
<p>看到倉儲中已經有三個提交，分別為：</p>
<p>9423d51 add second function<br/>715f01d add function<br/> initial add</p>
<p>更換版本到 "add function" 的提交版本，練習切換到先前的版本</p>
<p>git checkout 715f01d</p>
<p>此時，已經從"add second function"切換到"<span>add function"，SciTE 那就可以馬上看到 </span><span>myprogram.txt 已經回到"</span><span>add function"</span></p>
<p>然後用這個版本內容， 新增一個 dev 分支：</p>
<p>git branch dev</p>
<p>利用 git checkout 在工作目錄中導出 dev 的版本 (其實, 修改前的 dev 狀態與 "add first function" 提交時相同</p>
<p>git checkout dev</p>
<p>接下來， 對 myprogram.txt 改版，輸入：</p>
<p>test function</p>
<p>myprogram.txt 存檔後， 進行另一次新增與提交</p>
<p>git add .</p>
<p>git commit -m "add test function"</p>
<p>查看各提交點間的關係, 可以利用(單行顯示):</p>
<p>git log --graph --oneline --all</p>
<p>準備與 add second function 後的版本進行合併， 這時 git 出現 myprogram.txt 合併衝突，因為 first function 後， 已經加入 seconf function，但是 dev 分支是在 test function 加入後所儲存的版本，因此使用者必須決定 add second function 與 add test function的內容， 是只保留其中一項功能或者同時保留</p>
<p>git checkout master</p>
<p>將工作分支轉為 master 的版本, 然後將 dev 分支的內容合併進來:</p>
<p>git merge dev</p>
<p>這時的 myprogram.txt 必須要刪除衝突標註符號，並同時保留 add second function 與 add test function,，存檔</p>
<p>最後對此一合併後的版本，進行新增與提交</p>
<p></p>
<p></p>
<p></p>
<h2>Week 4</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1IsyntZoa9A" width="560"></iframe></p>
<h2>Week 5</h2>
<div>
<div class="syntaxhighlighter py" id="highlighter_764116">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 導入 Ex1 原始碼</code></div>
<div class="line number2 index1 alt1"><code class="py plain">a </code><code class="py keyword">=</code> <code class="py value">0</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">def</code> <code class="py plain">my_print(n, input_str):</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"以下將重覆列印 '"</code><code class="py plain">, input_str </code><code class="py keyword">+</code> <code class="py string">"' "</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(n) </code><code class="py keyword">+</code> <code class="py string">"次"</code><code class="py plain">)</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(n):</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">        </code><code class="py functions">print</code><code class="py plain">(i, input_str)</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py plain">my_print(</code><code class="py value">5</code><code class="py plain">, </code><code class="py string">"Hello World!"</code><code class="py plain">)</code></div>
<div class="line number9 index8 alt2"><code class="py plain">the_str </code><code class="py keyword">=</code> <code class="py string">"開始學習 Python"</code></div>
<div class="line number10 index9 alt1"><code class="py plain">num </code><code class="py keyword">=</code> <code class="py functions">input</code><code class="py plain">(</code><code class="py string">"請輸入要列印的次數!"</code><code class="py plain">)</code></div>
<div class="line number11 index10 alt2"><code class="py plain">my_print(</code><code class="py functions">int</code><code class="py plain">(num), the_str)</code></div>
<div class="line number12 index11 alt1"><code class="py plain">a </code><code class="py keyword">=</code> <code class="py plain">a </code><code class="py keyword">+</code> <code class="py value">1</code></div>
<div class="line number13 index12 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"("</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(a) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">, </code><code class="py string">"_"</code> <code class="py keyword">*</code> <code class="py value">25</code><code class="py plain">)</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="py keyword">def</code> <code class="py plain">myfun():</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py keyword">yield</code> <code class="py value">1</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py keyword">yield</code> <code class="py value">2</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py keyword">yield</code> <code class="py value">3</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py plain">myfun():</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(i)</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="py plain">x </code><code class="py keyword">=</code> <code class="py functions">iter</code><code class="py plain">(myfun())</code></div>
<div class="line number24 index23 alt1"><code class="py plain">y </code><code class="py keyword">=</code> <code class="py functions">list</code><code class="py plain">(myfun())</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="py plain">a </code><code class="py keyword">=</code> <code class="py plain">a </code><code class="py keyword">+</code> <code class="py value">1</code></div>
<div class="line number27 index26 alt2"><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"("</code> <code class="py keyword">+</code> <code class="py functions">str</code><code class="py plain">(a) </code><code class="py keyword">+</code> <code class="py string">")"</code><code class="py plain">, </code><code class="py string">"_"</code> <code class="py keyword">*</code> <code class="py value">25</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"><code class="py functions">print</code><code class="py plain">(x.__next__())</code></div>
<div class="line number29 index28 alt2"><code class="py functions">print</code><code class="py plain">(x.__next__())</code></div>
<div class="line number30 index29 alt1"><code class="py functions">print</code><code class="py plain">(x.__next__())</code></div>
<div class="line number31 index30 alt2"><code class="py functions">print</code><code class="py plain">(y)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<h4>在遠端執行</h4>
<p>在遠端執行會跳出視窗，給使用者輸入次數</p>
<p><img alt="" height="125" src="https://mdecp2018.github.io/site-s40723150/images/1031-3.png" width="317"/></p>
<h4>在近端執行</h4>
<p>用 SciTE 來執行 python 的程式碼</p>
<p>在 Tool -&gt; Go (F5) 開始執行程式碼</p>
<p>右側的執行框中就會跳出：</p>
<p><img alt="" height="156" src="https://mdecp2018.github.io/site-s40723150/images/1031-1.png" width="293"/></p>
<p>不會跳出視窗</p>
<p>要在 SciTE 的右側執行框輸入次數</p>
<p>我打 5 次</p>
<p><img alt="" height="357" src="https://mdecp2018.github.io/site-s40723150/images/1031-2.png" width="234"/></p>
<h2>Week 6</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/WFw8ILuym1Q" width="560"></iframe></p>
<p></p>
<h1>Python 手冊</h1>
<p>計算機程式教材:  <a href="http://mde.tw/cp2018/content/">http://mde.tw/cp2018/content/</a> </p>
<p>可攜程式下載: <a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing">p37.7z</a></p>
<h1>OnShape 手冊</h1>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a> </p>
<p>電腦輔助設計實習課程教材: <a href="http://mde.tw/cadp2018/content/">http://mde.tw/cadp2018/content/</a> </p>
<h1>Fusion 360</h1>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a> </p>
<p></p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; f7681d735da6cd26f0633d227b259d5aaa4da697</p>